{"version":3,"sources":["game.js","index.js","App.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","board","x","square","concat","renderSquare","makeBoard","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","step","prevState","jumpTo","status","current","winner","includes","handleClick","undo","restart","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cef8c769.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (<Square\r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n      />);\r\n  }\r\n\r\n  makeBoard() {\r\n    let board = []\r\n    for (let x=0; x<3; x++) {\r\n      let square = []\r\n      for (let i=0; i<3; i++) {\r\n        square = square.concat(<>{this.renderSquare(x*3 + i)}</>)\r\n      }\r\n      board = board.concat(<div className=\"board-row\">{square}</div>)\r\n    }\r\n    return board;\r\n  }\r\n  render() {\r\n    const board = this.makeBoard();\r\n    return (\r\n      board\r\n    );\r\n  }\r\n}\r\n\r\nexport class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history:[{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState((prevState) => {\r\n      return{\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n        history: prevState.history.slice(0, step + 1),\r\n    }});\r\n  }\r\n\r\n  restart() {\r\n    this.jumpTo(0)\r\n  }\r\n\r\n  undo() {\r\n    if (this.state.stepNumber === 0) {\r\n      return\r\n    } else {\r\n      this.jumpTo(this.state.history.length - 2)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = <div className=\"winner\">{'Winner: ' + winner}</div>;\r\n    } else if (!current.squares.includes(null)) {\r\n      status = <div className=\"tie\">It's a tie!</div>;\r\n    } else {\r\n      status = <div>{'Next player: ' + (this.state.xIsNext ? 'X' : 'O')}</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          {status}\r\n          <button onClick={() => this.undo()}>Undo last move</button>\r\n          <button onClick={() => this.restart()}>Restart game</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n","import React from 'react';\r\nimport { Game } from './game';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n    <h1> Challenge your friend to a game of Tic-Tack-Toe!</h1>\r\n    <Game />\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}